
#include <iostream>
#include <iomanip>
#include <stdlib.h>
#include <cmath>
using namespace std;

bool VerificarLineas(int sudoku[][9],int fila, int columna, int dimension) {
  for (int pos = 0; pos < dimension; pos++) {
    for (int linea = pos + 1; linea < dimension; linea++) {
      if (sudoku[pos][columna] == sudoku[linea][columna] ||
          sudoku[fila][pos] == sudoku[columna][linea]) {
        cout << "FALSE LINEA" << endl;
        return false;
      }
    }
  }
  cout << "TRUE LINEA" << endl;
  return true;
}

bool VerificarCuadrante(int sudoku[][9], int fila, int columna, int dimensionCuadrante) {
  int cuadrante[dimensionCuadrante] = {};
  int pos = 0;
  for (int x = fila - 1; x < 3;
       x++) { // Se recorre el cuadrante y se agregan los valores a un nuevo
              // vector llamado "cuadrante[9]"
    for (int y = columna - 1; y < 3; y++) {
      cuadrante[pos++] = sudoku[x][y];
    }
  }

  for (int fijo = 0; fijo < dimensionCuadrante;
       fijo++) { // Se recorre el nuevo vector y se verifica que todos los
                 // elementos sea distintos
    for (int compara = fijo + 1; compara < dimensionCuadrante; compara++) {
      if (cuadrante[fijo] == cuadrante[compara]) {
        cout << "FALSE CUADRANTE" << endl;
        return false;
        break;
      }
    }
  }
  cout << "TRUE CUADRANTE" << endl;
  return true;
}

void imprimir(int sudoku[9][9],int dimension) {
  cout << '\n' << "-------------------------" << '\n';
  for (int fila = 0; fila < dimension; fila++) {
    cout << "| ";
    for (int columna = 0; columna < dimension; columna++) {
      cout << sudoku[fila][columna] << " ";
      if ((columna + 1) % 3 == 0)
        cout << "| ";
    }
    if ((fila + 1) % 3 == 0)
      cout << '\n' << "-------------------------" << '\n';
    else
      cout << '\n';
  }
}

int main() {
  const int dimension = 9;
  const int dimensionCuadrante = 9;
  int sudoku[dimension][dimension] = {};
  int sudokuv[dimension][dimension]={7,4,1,6,9,8,3,2,5,5,3,8,2,4,1,6,7,9,9,2,6,3,7,5,4,1,8,4,1,3,8,2,6,9,5,7,2,6,7,5,3,9,8,4,1,8,5,9,4,1,7,2,3,6,1,9,2,7,8,3,5,6,4,3,7,5,9,6,4,1,8,2,6,8,4,1,5,2,7,9,3};
  imprimir(sudokuv,dimension);
  VerificarLineas(sudokuv,0, 0,dimension);
  VerificarCuadrante(sudokuv,1, 1,dimensionCuadrante);
}
